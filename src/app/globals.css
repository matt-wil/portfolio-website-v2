@import "tailwindcss";

@theme {
    /*
    SECTION 1: DEFINE ALL VARIABLES
    --------------------------------
    Every variable used in any theme must be defined here with a default value.
    We'll use the "Brutalist Light" theme as our default.
    This ensures Tailwind generates all utility classes like `bg-buffer-background`.
    */

    /* -- Core Semantic Tokens (Defaults to Brutalist Light) -- */
    --background: 0 0% 97%;
    --foreground: 0 0% 7%;
    --card: 0 0% 97%;
    --card-foreground: 0 0% 7%;
    --popover: 0 0% 97%;
    --popover-foreground: 0 0% 7%;
    --primary: 11 100% 60%;
    --primary-foreground: 0 0% 7%;
    --muted: 0 0% 88%;
    --muted-foreground: 0 0% 40%;
    --accent: 11 100% 60%;
    --accent-foreground: 0 0% 7%;
    --destructive: 0 100% 67%;
    --destructive-foreground: 0 0% 97%;
    --border: 0 0% 88%;
    --input: 0 0% 88%;
    --ring: 11 100% 60%;
    --radius: 0;

    /* -- Brutalist-Specific Tokens -- */
    --blueprint-grid: 0 0% 88%;

    /* -- Developer-Specific Tokens (with sensible light-mode defaults) -- */
    --buffer-background: 0 0% 100%;
    --line-number: 0 0% 60%;
    --line-number-active: 0 0% 10%;
    --comment: 140 35% 40%;
    --keyword: 280 80% 60%;
    --function: 210 70% 50%;
    --string: 30 80% 50%;
    --constant: 330 70% 55%;
    --type: 180 60% 45%;
    --error: 0 100% 67%;
    --statusline-bg: 0 0% 92%;
    --statusline-fg: 0 0% 15%;
    --statusline-mode: 280 80% 60%;
    --selection: 260 50% 90%;
    --visual: 230 80% 90%;
    --search: 30 100% 90%;
    --split: 0 0% 85%;
    --cursor: 0 0% 10%;
    --cursor-insert: 210 70% 50%;

    /* -- Splash Screen Tokens -- */
    --splash-bg: 0 0% 5%;
    --splash-fg: 0 0% 96%;
    --splash-accent: 217 91% 50%;
}

/*
SECTION 2: THEME OVERRIDES
---------------------------
These are standard CSS rules that go OUTSIDE the @theme block.
We use parent classes `.theme-brutalist`, `.theme-developer`, and `.dark`.
*/

/* -- Brutalist Dark Mode -- */
.dark.theme-brutalist {
    --background: 0 0% 8%;
    --foreground: 0 0% 95%;
    --card: 0 0% 8%;
    --card-foreground: 0 0% 95%;
    --primary: 11 100% 65%;
    --primary-foreground: 0 0% 8%;
    --muted: 0 0% 15%;
    --muted-foreground: 0 0% 60%;
    --accent: 11 100% 65%;
    --accent-foreground: 0 0% 8%;
    --border: 0 0% 15%;
    --input: 0 0% 15%;
    --ring: 11 100% 65%;
    --blueprint-grid: 0 0% 20%;
}

/* -- Developer Dark Mode (Tokyo Night) -- */
.dark.theme-developer {
    /* Core Overrides */
    --background: 220 14% 14%;
    --foreground: 220 14% 71%;
    --card: 222 16% 12%;
    --card-foreground: 220 14% 71%;
    --primary: 267 89% 78%;
    --primary-foreground: 222 16% 12%;
    --muted: 220 9% 46%;
    --muted-foreground: 220 14% 60%;
    --accent: 267 89% 78%;
    --accent-foreground: 222 16% 12%;
    --border: 223 14% 20%;
    --input: 223 14% 20%;
    --ring: 267 89% 78%;

    /* Syntax Overrides */
    --buffer-background: 220 14% 14%;
    --line-number: 223 14% 40%;
    --line-number-active: 220 14% 71%;
    --comment: 220 9% 46%;
    --keyword: 267 89% 78%;
    --function: 187 100% 67%;
    --string: 158 64% 52%;
    --constant: 30 100% 68%;
    --type: 150 58% 70%;
    --statusline-bg: 222 16% 10%;
    --statusline-fg: 220 14% 71%;
    --statusline-mode: 267 89% 78%;
    --selection: 267 29% 25%;
    --visual: 230 89% 78%;
    --search: 30 100% 68%;
    --split: 223 14% 18%;
    --cursor: 220 14% 71%;
    --cursor-insert: 158 64% 52%;
}

/*
SECTION 3: GLOBAL STYLES & UTILITIES
*/
body {
    /* CORRECTED: Wrapped variables in hsl() function */
    background: hsl(var(--background));
    color: hsl(var(--foreground));
    font-family: Arial, Helvetica, sans-serif;
    transition:
        background 0.2s ease-in-out,
        color 0.2s ease-in-out;
}

/* Animations */
@keyframes blink {
    0%,
    49% {
        opacity: 1;
    }
    50%,
    100% {
        opacity: 0;
    }
}

@keyframes typing {
    from {
        width: 0;
    }
    to {
        width: 100%;
    }
}

.cursor-blink {
    animation: blink 1s step-end infinite;
}

.blueprint-grid {
    background-image:
        linear-gradient(hsl(var(--blueprint-grid)) 0.5px, transparent 0.5px),
        linear-gradient(
            90deg,
            hsl(var(--blueprint-grid)) 0.5px,
            transparent 0.5px
        );
    background-size: calc(100% / 12) 2rem;
}

@layer utilities {
    /* CRT scanline effect */
    .crt-scanlines::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: linear-gradient(
            to bottom,
            transparent 50%,
            rgba(0, 0, 0, 0.15) 50%
        );
        background-size: 100% 4px;
        pointer-events: none;
        z-index: 50;
        animation: scanlines 8s linear infinite;
    }

    @keyframes scanlines {
        0% {
            background-position: 0 0;
        }
        100% {
            background-position: 0 4px;
        }
    }

    /* Text glow for CRT effect */
    .text-glow {
        text-shadow: 0 0 8px currentColor;
    }
}
